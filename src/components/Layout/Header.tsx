import { css } from '@emotion/react';
import { HeaderProps } from '../../types';
import SearchBar from '../Search/SearchBar';

const Header: React.FC<HeaderProps> = ({ navigationItems }) => {
  const headerStyle = css`
    display: flex;
    width: 100%;
    height: 60px;
    padding: 17px 20px;
    align-items: center;
    gap: 56px;
    background-color: #15213D;

    @media (max-width: 991px) {
      padding: 12px 16px;
      gap: 24px;
      flex-wrap: wrap;
    }

    @media (max-width: 640px) {
      padding: 8px 12px;
      gap: 16px;
    }
  `;

  const logoContainerStyle = css`
    display: flex;
    width: 86px;
    height: 25.689px;
    justify-content: center;
    align-items: flex-end;
    gap: 8.817px;
    flex-shrink: 0;
  `;

  const navigationStyle = css`
    display: flex;
    align-items: center;
    gap: 32px;
    flex: 1;

    @media (max-width: 991px) {
      gap: 16px;
      flex-wrap: wrap;
    }

    @media (max-width: 640px) {
      display: none;
    }
  `;

  const searchContainerStyle = css`
    flex: 1;
    max-width: 400px;
    margin: 0 20px;

    @media (max-width: 991px) {
      max-width: 300px;
      margin: 0 16px;
    }

    @media (max-width: 640px) {
      display: none;
    }
  `;

  const navItemStyle = css`
    color: #FFF;
    font: 700 16px/150% Pretendard;
    cursor: pointer;
    transition: opacity 0.2s ease;

    &:hover {
      opacity: 0.8;
    }
  `;

  const dividerStyle = css`
    width: 0px;
    height: 24px;
    stroke-width: 1px;
    stroke: #FFF;
    opacity: 0.5;
  `;

  const breadcrumbStyle = css`
    display: flex;
    align-items: center;
    gap: 4px;
    opacity: 0.5;

    @media (max-width: 991px) {
      display: none;
    }
  `;

  const breadcrumbTextStyle = css`
    color: #FFF;
    letter-spacing: -0.96px;
    font: 500 16px/150% Pretendard;
  `;

  const dotIconSvg = `<svg width="4" height="4" viewBox="0 0 4 4" fill="none" xmlns="http://www.w3.org/2000/svg">
    <circle cx="2" cy="2" r="2" fill="white"></circle>
  </svg>`;

  const dividerSvg = `<svg width="2" height="26" viewBox="0 0 2 26" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path opacity="0.5" d="M1 1V25" stroke="white" stroke-linecap="round" stroke-linejoin="round"></path>
  </svg>`;

  const logoSvg = `<svg width="86" height="26" viewBox="0 0 86 26" fill="none" xmlns="http://www.w3.org/2000/svg">
    <path d="M84.588 13.8425C84.588 14.3476 84.4904 14.824 84.2953 15.2717C84.1001 15.7079 83.8074 16.0925 83.4171 16.4254C83.0383 16.7583 82.5676 17.0223 82.0051 17.2175C81.4541 17.4011 80.817 17.493 80.0938 17.493C79.6001 17.493 79.1696 17.4528 78.8023 17.3724C78.4924 17.7398 78.3374 18.0956 78.3374 18.44C78.3374 18.7041 78.4063 18.905 78.544 19.0427C78.6932 19.1805 78.9343 19.2493 79.2672 19.2493H81.1958C81.8157 19.2493 82.3897 19.3182 82.9177 19.456C83.4458 19.5937 83.8992 19.7946 84.2781 20.0587C84.6684 20.3227 84.9668 20.6499 85.1735 21.0402C85.3916 21.4419 85.5006 21.9069 85.5006 22.4349C85.5006 23.5484 85.0529 24.3922 84.1575 24.9662C83.2736 25.5516 81.9879 25.8444 80.3004 25.8444C78.5555 25.8444 77.2353 25.5516 76.3399 24.9662C75.456 24.3807 75.014 23.5944 75.014 22.6071C75.014 22.0331 75.1575 21.5395 75.4445 21.1263C75.743 20.713 76.1276 20.3629 76.5982 20.0759C76.1735 19.6856 75.9611 19.1862 75.9611 18.5778C75.9611 18.1875 76.0529 17.8259 76.2366 17.493C76.4318 17.1486 76.713 16.8788 77.0804 16.6837C76.5982 16.3393 76.2309 15.926 75.9783 15.4439C75.7258 14.9502 75.5995 14.4164 75.5995 13.8425C75.5995 13.3374 75.6971 12.861 75.8922 12.4133C76.0989 11.9656 76.3916 11.5752 76.7704 11.2423C77.1492 10.9094 77.6142 10.6511 78.1652 10.4675C78.7277 10.2723 79.3705 10.1747 80.0938 10.1747C80.6448 10.1747 81.1441 10.2321 81.5918 10.3469C82.0395 10.4502 82.4356 10.5995 82.78 10.7946C83.0784 10.6684 83.4056 10.5708 83.7615 10.5019C84.1173 10.433 84.4101 10.3986 84.6397 10.3986C84.9037 10.3986 85.139 10.4101 85.3457 10.433C85.5523 10.4445 85.7704 10.4789 86 10.5363V12.2583C86 12.3501 85.9656 12.419 85.8967 12.4649C85.8393 12.5108 85.7474 12.5051 85.6212 12.4477C85.4719 12.3903 85.3227 12.3444 85.1735 12.3099C85.0242 12.2755 84.8635 12.2583 84.6913 12.2583C84.611 12.2583 84.5306 12.264 84.4502 12.2755C84.3814 12.2755 84.3125 12.2812 84.2436 12.2927C84.3699 12.5223 84.456 12.7691 84.5019 13.0332C84.5593 13.2972 84.588 13.567 84.588 13.8425ZM77.7175 22.5382C77.7175 22.7793 77.7577 22.9917 77.838 23.1754C77.9299 23.359 78.0733 23.514 78.2685 23.6403C78.4751 23.778 78.7449 23.8814 79.0778 23.9502C79.4107 24.0191 79.8182 24.0535 80.3004 24.0535C80.7825 24.0535 81.1843 24.0134 81.5057 23.933C81.8272 23.8641 82.0797 23.7608 82.2634 23.6231C82.4585 23.4853 82.5963 23.3131 82.6767 23.1065C82.757 22.9113 82.7972 22.6932 82.7972 22.4521C82.7972 22.0159 82.6824 21.6601 82.4528 21.3845C82.2232 21.1205 81.7755 20.9885 81.1097 20.9885H79.2672C79.1065 20.9885 78.9515 20.9828 78.8023 20.9713C78.6531 20.9598 78.5096 20.9426 78.3718 20.9196C78.1307 21.1722 77.9585 21.4419 77.8552 21.7289C77.7634 22.0159 77.7175 22.2857 77.7175 22.5382ZM81.8846 13.8425C81.8846 13.257 81.7296 12.7978 81.4196 12.4649C81.1212 12.132 80.6792 11.9656 80.0938 11.9656C79.5083 11.9656 79.0606 12.132 78.7506 12.4649C78.4522 12.7978 78.3029 13.257 78.3029 13.8425C78.3029 14.4279 78.4522 14.8871 78.7506 15.22C79.0606 15.5414 79.5083 15.7022 80.0938 15.7022C80.6792 15.7022 81.1212 15.5414 81.4196 15.22C81.7296 14.8871 81.8846 14.4279 81.8846 13.8425Z" fill="white"></path>
    <path d="M64.5527 10.5019H67.4283V11.449C67.7842 11.1046 68.1802 10.8061 68.6164 10.5536C69.0641 10.301 69.5922 10.1747 70.2006 10.1747C70.7172 10.1747 71.1936 10.2494 71.6298 10.3986C72.066 10.5363 72.4449 10.743 72.7663 11.0185C73.0992 11.294 73.3575 11.6384 73.5412 12.0516C73.7249 12.4534 73.8167 12.9184 73.8167 13.4464V20.1792H71.1132V13.6875C71.1132 13.1365 70.987 12.7404 70.7344 12.4994C70.4933 12.2468 70.0973 12.1205 69.5463 12.1205C69.1675 12.1205 68.8116 12.1951 68.4787 12.3444C68.1458 12.4936 67.8243 12.706 67.5144 12.9815V20.1792H64.811V12.2411C64.811 11.9426 64.7765 11.7073 64.7076 11.5351C64.6502 11.3629 64.5412 11.1849 64.3805 11.0013C64.2657 10.875 64.2312 10.7602 64.2772 10.6569C64.3346 10.5536 64.4264 10.5019 64.5527 10.5019Z" fill="white"></path>
    <path d="M62.5766 7.43684C62.5766 7.90751 62.4216 8.29781 62.1117 8.60776C61.8132 8.91771 61.4229 9.07268 60.9408 9.07268C60.4586 9.07268 60.0626 8.91771 59.7526 8.60776C59.4541 8.29781 59.3049 7.90751 59.3049 7.43684C59.3049 6.96618 59.4541 6.57588 59.7526 6.26593C60.0626 5.95598 60.4586 5.801 60.9408 5.801C61.4229 5.801 61.8132 5.95598 62.1117 6.26593C62.4216 6.57588 62.5766 6.96618 62.5766 7.43684ZM62.4733 10.5019V20.1792H59.7698V12.2066C59.7698 11.9311 59.7354 11.7072 59.6665 11.5351C59.6091 11.3629 59.5001 11.1849 59.3394 11.0013C59.236 10.875 59.2073 10.7602 59.2533 10.6569C59.2992 10.5535 59.3853 10.5019 59.5115 10.5019H62.4733Z" fill="white"></path>
    <path d="M43.9922 12.1894C43.9003 11.8909 43.8028 11.6556 43.6994 11.4834C43.5961 11.3112 43.4813 11.162 43.3551 11.0357C43.2288 10.9094 43.1829 10.7889 43.2173 10.6741C43.2517 10.5593 43.3321 10.5019 43.4584 10.5019H46.2996L47.7632 16.081L48.1248 17.6307L48.4692 16.081L49.9328 11.0874H51.8959L53.3767 16.0982L53.7039 17.6307L54.0483 16.081L55.5808 10.5019H58.267L55.3225 20.1792H52.6879L51.2243 15.5127L50.9316 14.359L50.6388 15.5127L49.1924 20.1792H46.4373L43.9922 12.1894Z" fill="white"></path>
    <path d="M33.5492 17.3208C33.8018 17.5274 34.0888 17.7168 34.4102 17.889C34.7431 18.0497 35.076 18.1875 35.4089 18.3023C35.7533 18.4171 36.092 18.5089 36.4249 18.5778C36.7578 18.6352 37.0677 18.6639 37.3547 18.6639C38.055 18.6639 38.6002 18.5204 38.9905 18.2334C39.3923 17.9349 39.5932 17.493 39.5932 16.9075C39.5932 16.4598 39.4842 16.081 39.2661 15.771C39.0594 15.4611 38.6691 15.1626 38.0951 14.8756C37.7622 14.7034 37.4465 14.5485 37.1481 14.4107C36.8496 14.2729 36.5626 14.1294 36.2871 13.9802C36.0116 13.831 35.7418 13.676 35.4778 13.5153C35.2252 13.3431 34.9727 13.1537 34.7201 12.947C34.2724 12.5453 33.9051 12.0976 33.6181 11.6039C33.3311 11.0988 33.1876 10.4847 33.1876 9.76147C33.1876 9.26785 33.2852 8.8144 33.4803 8.40114C33.687 7.97639 33.9797 7.61479 34.3585 7.31632C34.7374 7.01785 35.1965 6.78826 35.7361 6.62754C36.2871 6.45535 36.907 6.36925 37.5958 6.36925C39.0881 6.36925 40.414 6.6218 41.5735 7.1269V9.24489C41.5735 9.4056 41.5161 9.50892 41.4013 9.55483C41.2865 9.58927 41.1659 9.55483 41.0397 9.45152C40.0983 8.65943 39.0652 8.26338 37.9402 8.26338C37.3203 8.26338 36.8439 8.3954 36.511 8.65943C36.1895 8.92346 36.0288 9.2908 36.0288 9.76147C36.0288 10.0944 36.0862 10.3814 36.201 10.6224C36.3158 10.8635 36.488 11.0759 36.7176 11.2596C37.1538 11.6154 37.6187 11.9254 38.1124 12.1894C38.6175 12.4534 39.1111 12.7002 39.5932 12.9298C40.0409 13.1365 40.437 13.3603 40.7814 13.6014C41.1372 13.8425 41.4357 14.118 41.6768 14.4279C41.9293 14.7379 42.1187 15.0937 42.245 15.4955C42.3713 15.8858 42.4344 16.345 42.4344 16.8731C42.4344 17.5274 42.3024 18.0899 42.0384 18.5606C41.7858 19.0197 41.43 19.4043 40.9708 19.7143C40.5116 20.0127 39.9721 20.2308 39.3522 20.3686C38.7437 20.5064 38.0894 20.5752 37.3891 20.5752C36.8726 20.5752 36.333 20.5178 35.7705 20.403C35.2195 20.2882 34.7259 20.1447 34.2897 19.9726C33.8534 19.7889 33.509 19.588 33.2565 19.3699C33.0039 19.1518 32.9236 18.9337 33.0154 18.7155L33.5492 17.3208Z" fill="white"></path>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M17.2219 15.5783H2.3134V10.1804H17.2219V15.5783Z" fill="url(#paint0_linear_2_966)"></path>
    <path d="M19.6288 10.914C20.6842 11.9106 20.7063 13.5478 19.6781 14.5708C19.6781 14.5708 13.2063 20.7643 11.0529 22.8781C8.89948 24.992 2.69896 23.8924 2.69896 23.8924L15.856 10.9618C16.8842 9.93883 18.5733 9.91743 19.6288 10.914Z" fill="white"></path>
    <path opacity="0.7" d="M21.6618 16.978C22.243 17.5179 22.2552 18.4048 21.6889 18.9589C21.6889 18.9589 18.1248 22.314 16.9388 23.4591C15.7529 24.6042 12.3381 24.0085 12.3381 24.0085L19.584 17.0039C20.1503 16.4497 21.0805 16.4381 21.6618 16.978Z" fill="white"></path>
    <g opacity="0.5">
      <path d="M23.8817 19.6573C24.2488 19.9958 24.2565 20.552 23.8989 20.8996C23.8989 20.8996 21.6478 23.0036 20.8988 23.7217C20.1498 24.4398 17.9931 24.0662 17.9931 24.0662L22.5695 19.6735C22.9271 19.326 23.5146 19.3187 23.8817 19.6573Z" fill="url(#paint1_linear_2_966)"></path>
      <path d="M23.8817 19.6573C24.2488 19.9958 24.2565 20.552 23.8989 20.8996C23.8989 20.8996 21.6478 23.0036 20.8988 23.7217C20.1498 24.4398 17.9931 24.0662 17.9931 24.0662L22.5695 19.6735C22.9271 19.326 23.5146 19.3187 23.8817 19.6573Z" fill="white"></path>
    </g>
    <path fill-rule="evenodd" clip-rule="evenodd" d="M12.9252 0.655631C13.9579 1.68604 14.6539 4.07487 13.6478 5.13257L4.48048 14.7703C3.4744 15.828 1.82163 15.8501 0.788902 14.8197C-0.243823 13.7893 -0.265428 12.0966 0.740647 11.0389L9.90796 1.40115C10.914 0.343446 11.8925 -0.374773 12.9252 0.655631Z" fill="white"></path>
    <defs>
      <linearGradient id="paint0_linear_2_966" x1="17.2219" y1="12.8793" x2="2.3134" y2="12.8793" gradientUnits="userSpaceOnUse">
        <stop stop-color="white"></stop>
        <stop offset="1" stop-color="white" stop-opacity="0"></stop>
      </linearGradient>
      <linearGradient id="paint1_linear_2_966" x1="24.2982" y1="19.5402" x2="20.1037" y2="25.5565" gradientUnits="userSpaceOnUse">
        <stop stop-color="#5D89FF"></stop>
        <stop offset="1" stop-color="#003FFD"></stop>
      </linearGradient>
    </defs>
  </svg>`;

  const breadcrumbItems = [
    'e-hr 시스템(NE···',
    '신한e메일',
    'SFG Digital HUB',
    '그룹화상회의',
    '통합문서반출시···',
    '신한 오픈소스 ···'
  ];

  const handleSearch = (query: string) => {
    // Navigate to search page or handle search
    console.log('Searching for:', query);
  };

  const handleClear = () => {
    console.log('Search cleared');
  };

  return (
    <header css={headerStyle}>
      <div css={logoContainerStyle}>
        <div dangerouslySetInnerHTML={{ __html: logoSvg }} />
      </div>

      <div css={navigationStyle}>
        {navigationItems.map((item) => (
          <div key={item.id} css={navItemStyle}>
            {item.label}
          </div>
        ))}

        <div css={dividerStyle}>
          <div dangerouslySetInnerHTML={{ __html: dividerSvg }} />
        </div>

        {breadcrumbItems.map((item, index) => (
          <div key={index} css={breadcrumbStyle}>
            <div dangerouslySetInnerHTML={{ __html: dotIconSvg }} />
            <div css={breadcrumbTextStyle}>{item}</div>
          </div>
        ))}
      </div>

      <div css={searchContainerStyle}>
        <SearchBar
          onSearch={handleSearch}
          onClear={handleClear}
          placeholder="통합 검색..."
          showFilters={false}
        />
      </div>
    </header>
  );
};

export default Header;
